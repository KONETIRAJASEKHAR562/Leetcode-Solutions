1845. Seat Reservation Manager Solution

Solution

class SeatManager {

    PriorityQueue<Integer> pq;
    int curr = 0;

    public SeatManager(int n) {
        pq = new PriorityQueue<>();
    }
    
    public int reserve() {
        return pq.isEmpty() ? ++curr : pq.poll();
    }
    
    public void unreserve(int seatNumber) {
        pq.add(seatNumber);
    }
}



Method 2:

class SeatManager {

    boolean[] seats;
    int first = 0;
    int total = 0;

    public SeatManager(int n) {
        seats = new boolean[n];
        total = n;
        Arrays.fill(seats, false);
    }
    
    public int reserve() {
        seats[first] = true;
        int reserved = first+1;
        while(first < total && seats[first]) first++;
        return reserved;
    }
    
    public void unreserve(int seatNumber) {
        if(first > seatNumber-1) {
            first = seatNumber-1;
        }
        seats[seatNumber-1] = false; 
    }
}
